{"version":3,"sources":["topic/topicLearn.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YA0GA;gBAaE,6BAAoB,KAAqB,EAAE,MAAc,EAAU,WAAwB;oBAAvE,UAAK,GAAL,KAAK,CAAgB;oBAA0B,gBAAW,GAAX,WAAW,CAAa;oBACvF,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;oBACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAC7B,IAAI,CAAC,UAAU,GAAG,mCAAmC,CAAC;oBACtD,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;gBAC5B,CAAC;gBAEF,sCAAQ,GAAR;oBAAA,iBAMC;oBALG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,MAAM;wBAClD,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;wBACvB,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC;6BACxB,SAAS,CAAC,UAAC,KAAa,IAAK,OAAA,KAAI,CAAC,KAAK,GAAG,KAAK,EAAlB,CAAkB,CAAC,CAAC;oBACxD,CAAC,CAAC,CAAC;gBACP,CAAC;gBAED,yCAAW,GAAX;oBACE,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;gBACzB,CAAC;gBAED,0CAAY,GAAZ;oBACE,EAAE,CAAA,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,CAAC,CAC7B,CAAC;wBACC,MAAM,CAAC;oBACT,CAAC;oBACD,IAAI,CAAA,CAAC;wBACH,IAAI,CAAC,eAAe,EAAE,CAAC;oBACzB,CAAC;gBACH,CAAC;gBAED,sCAAQ,GAAR;oBACE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAC7B,IAAI,CAAC,UAAU,GAAG,mCAAmC,CAAC;oBACtD,IAAI,CAAC,eAAe,EAAE,CAAC;gBACzB,CAAC;gBAED,yCAAW,GAAX;oBACE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;oBAC5B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBAC3B,CAAC;gBAED,yCAAW,GAAX;oBACE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;oBAC5B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBAC1B,CAAC;gBAED,2CAAa,GAAb;oBACE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAC7B,IAAI,CAAC,UAAU,GAAG,mCAAmC,CAAC;oBACtD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBAC1B,CAAC;gBAlKH;oBAAC,gBAAS,CAAC;wBACT,sBAAsB;wBACtB,QAAQ,EAAE,aAAa;wBACvB,QAAQ,EAAE,q4HA8FX;qBACA,CAAC;;uCAAA;gBAkEF,0BAAC;YAAD,CAjEA,AAiEC,IAAA;YAjED,qDAiEC,CAAA","file":"topic/topicLearn.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport { ITopic } from '../shared/interfaces';\r\nimport { DataService } from '../core/services/data.service';\r\n\r\n@Component({\r\n  //moduleId: module.id,\r\n  selector: 'topic-learn',\r\n  template: `\r\n<div *ngIf=\"topic\">\r\n  <h1><b>Learn</b> about {{topic.name}}</h1>\r\n  <div class=\"content\">\r\n    <div *ngFor=\"let learnItem of topic.learnItems; let i = index\">\r\n      <div *ngIf=\"currentQuestion == i\">\r\n\r\n        <h3>{{i/topic.learnItems.length | MyPercentPipe }} Complete</h3>\r\n        <h2>{{learnItem.title}}</h2> \r\n        <br>\r\n\r\n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!validAnswer && answerSubmitted\">\r\n            <a href=\"#\" class=\"alert-link\">Incorrect Answer!</a>\r\n            <p>Please click \"Retry\" to attempt answering the question again.</p>\r\n        </div>\r\n\r\n        <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"validAnswer && answerSubmitted\">\r\n            <a href=\"#\" class=\"alert-link\">Correct Answer!</a>\r\n            <p>Correct Answer was {{learnItem.answer}}. <strong>Why?</strong>: {{learnItem.explanation}}</p>\r\n        </div>\r\n\r\n        <form #f=\"ngForm\" (ngSubmit)=\"onSubmit()\" method=\"post\">\r\n          <p>{{learnItem.name}}</p>\r\n\r\n            <div class=\"action-buttons\">\r\n              <div class=\"shaded\">\r\n                <button  type=\"button\" class=\"btn btn-default\" (click)=\"previousItem()\"> Previous </button>\r\n              </div>\r\n              <br>\r\n              <div *ngIf=\"learnItem.answer && !answerSubmitted\">\r\n                <button type=\"button\" \r\n                        (click)=\"rightAnswer()\" \r\n                          class=\"btn btn-success btn-lg\" \r\n                          *ngIf=\"learnItem.answer == userAnswer\">\r\n                    Submit\r\n                </button>\r\n                <button type=\"button\" \r\n                        (click)=\"wrongAnswer()\" \r\n                        class=\"btn btn-success btn-lg\" \r\n                        *ngIf=\"learnItem.answer != userAnswer && validAnswer\">\r\n                    Submit\r\n                </button>\r\n              </div>\r\n\r\n              <div *ngIf=\"!learnItem.answer || answerSubmitted\">\r\n                <button type=\"submit\" class=\"btn btn-success btn-lg\" *ngIf=\"validAnswer\">\r\n                  Next\r\n                </button>\r\n              </div>\r\n              <button (click)=\"retryQuestion()\" class=\"btn btn-danger btn-lg\" *ngIf=\"!validAnswer\">Retry</button>\r\n              <br>\r\n\r\n            </div>\r\n\r\n          <ul class=\"flex-container\">\r\n            <li class=\"flex-item\">\r\n              <img src=\"/studymc-media/compounds/{{topic.name}}/{{learnItem.imagePath}}\" id=\"logo\" alt=\"logo\">\r\n            </li>\r\n            <li class=\"flex-item\" style=\"width: 400px;\">\r\n              <ul>\r\n                <li *ngFor=\"let info of learnItem.colorLocationAssociations\">\r\n                      <p [style.color]=[info.color]> {{info.description}} </p>\r\n                </li>\r\n              </ul>\r\n              <p *ngIf=\"learnItem.answer\">\r\n                {{learnItem.question}}\r\n                <select class=\"form-control input-lg\" [(ngModel)]=\"userAnswer\" name=\"userAnswerInput\" *ngIf=\"!answerSubmitted\" required>\r\n                  <option [value]=\"''\" disabled=\"disabled\"></option>\r\n                  <option *ngFor=\"let option of learnItem.options;\">{{option}}</option>\r\n                </select>\r\n              </p>\r\n              <br>\r\n            </li>\r\n          </ul>\r\n\r\n        </form>\r\n\r\n      </div>\r\n      <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"topic.learnItems.length == currentQuestion\">\r\n            <a href=\"#\" class=\"alert-link\">Congrats! You finished learning about {{topic.name}} </a>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"!topic.learnItems.length\">\r\n        <div class=\"alert alert-info review-alert\" role=\"alert\">\r\n          <a href=\"#\" class=\"alert-link\"> There are currently no Learning items for {{topic.name}}.</a>\r\n        </div>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"!topic\" class=\"row\">\r\n    No topic found\r\n  </div>\r\n</div> \r\n                \r\n`\r\n})\r\nexport class TopicLearnComponent implements OnInit {\r\n\r\n  topic: ITopic;\r\n  private sub: Subscription;\r\n\r\n  router: Router;\r\n\r\n  userAnswer: string;\r\n  correctAnswer: string;\r\n  currentQuestion: number;\r\n  validAnswer: boolean;\r\n  answerSubmitted: boolean;\r\n\r\n  constructor(private route: ActivatedRoute, router: Router, private dataService: DataService) {\r\n      this.router = router;\r\n      this.validAnswer = true;\r\n      this.answerSubmitted = false;\r\n      this.userAnswer = \"Current Question Not Answered Yet\";\r\n      this.currentQuestion = 0;\r\n   } \r\n\r\n  ngOnInit() {\r\n      this.sub = this.route.parent.params.subscribe(params => {\r\n        let id = +params['id'];\r\n        this.dataService.getTopic(id)\r\n            .subscribe((topic: ITopic) => this.topic = topic);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n  }\r\n\r\n  previousItem() {\r\n    if(this.currentQuestion == 0)\r\n    {\r\n      return;\r\n    }\r\n    else{\r\n      this.currentQuestion--;\r\n    }\r\n  }\r\n\r\n  onSubmit(){\r\n    this.answerSubmitted = false;\r\n    this.userAnswer = \"Current Question Not Answered Yet\";\r\n    this.currentQuestion++;\r\n  }\r\n\r\n  wrongAnswer(){\r\n    this.answerSubmitted = true;\r\n    this.validAnswer = false;\r\n  }\r\n\r\n  rightAnswer(){\r\n    this.answerSubmitted = true;\r\n    this.validAnswer = true;\r\n  }\r\n\r\n  retryQuestion(){\r\n    this.answerSubmitted = false;\r\n    this.userAnswer = \"Current Question Not Answered Yet\";\r\n    this.validAnswer = true;\r\n  }\r\n\r\n}"],"sourceRoot":"/source/"}