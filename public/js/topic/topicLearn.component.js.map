{"version":3,"sources":["topic/topicLearn.component.ts"],"names":[],"mappings":"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","file":"topic/topicLearn.component.js","sourcesContent":["declare var hotspotsModule:any;\r\n\r\nimport { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport { ITopic } from '../shared/interfaces';\r\nimport { DataService } from '../core/services/data.service';\r\n\r\nimport { CompoundCanvasComponent } from '../shared/compoundCanvas.component';\r\nimport { AlertBoxComponent } from '../shared/alertBox.component';\r\nimport { EndMessageComponent } from '../shared/endMessage.component';\r\nimport { nextPrevAnimation } from '../shared/animations';\r\n\r\ntype Orientation = ( \"void\" | \"next\" | \"none\" | \"previous\" );\r\n\r\n@Component({\r\n  //moduleId: module.id,\r\n  selector: 'topic-learn',\r\n  animations: [nextPrevAnimation],\r\n  template: `\r\n<div *ngIf=\"topic\">\r\n  <h1> <strong>Learn</strong> about {{topic.name}}</h1>\r\n\r\n    <div class=\"content\">\r\n      <end-message *ngIf=\"moduleIsComplete\" [topicName]=\"topic.name\" [incorrectAnswers]=\"incorrectAnswers\">\r\n      </end-message>\r\n\r\n    <div *ngFor=\"let learnItem of topic.learnItems; let i = index\" [@NextPrevAnimation]=\"orientation\">\r\n      <div *ngIf=\"currentQuestion == i\">\r\n\r\n        <h3>{{i/topic.learnItems.length | MyPercentPipe }} Complete</h3>\r\n\r\n        <alert-box [learnItem]=\"learnItem\" [validAnswer]=\"validAnswer\" [answerSubmitted]=\"answerSubmitted\"></alert-box>\r\n  \r\n          <p>{{learnItem.title}} | {{learnItem.name}}</p>\r\n\r\n            <div class=\"action-buttons\">\r\n              <div class=\"shaded\">\r\n                <button  type=\"button\" class=\"btn btn-default\" (click)=\"previousItem()\"> Previous </button>\r\n              </div>\r\n\r\n              <br>\r\n\r\n              <div *ngIf=\"learnItem.answer && !answerSubmitted\">\r\n                <button type=\"button\" \r\n                        (click)=\"rightAnswer()\" \r\n                        class=\"btn btn-success btn-lg\" \r\n                        *ngIf=\"learnItem.answer == userAnswer\">\r\n                    Submit\r\n                </button>\r\n\r\n                <button type=\"button\" \r\n                        (click)=\"wrongAnswer()\" \r\n                        class=\"btn btn-success btn-lg\" \r\n                        *ngIf=\"learnItem.answer != userAnswer && validAnswer\">\r\n                    Submit\r\n                </button>\r\n\r\n              </div>\r\n\r\n              <div *ngIf=\"!learnItem.answer || answerSubmitted\">\r\n\r\n                <button type=\"button\" (click)=\"nextItem()\" class=\"btn btn-success btn-lg\" *ngIf=\"validAnswer\">\r\n                  Next\r\n                </button>\r\n\r\n              </div>\r\n\r\n              <button (click)=\"retryQuestion()\" class=\"btn btn-danger btn-lg\" *ngIf=\"!validAnswer\">Retry</button>\r\n            </div>\r\n\r\n          <div *ngIf=\"learnItem.compoundHotspots\">\r\n            <compound-Canvas [learnItem]=\"learnItem\" [topic]=\"topic\" [i]=\"i\">Loading Canvas...</compound-Canvas>\r\n          </div>\r\n\r\n          <ul *ngIf=\"!learnItem.compoundHotspots\" class=\"flex-container\">\r\n            <li class=\"flex-item\">\r\n              <img src=\"/studymc-media/compounds/{{topic.name}}/{{learnItem.imagePath}}\" id=\"logo\" alt=\"logo\">\r\n            </li>\r\n            <li class=\"flex-item\" style=\"width: 400px;\">\r\n              <ul>\r\n                <li *ngFor=\"let info of learnItem.colorLocationAssociations\">\r\n                      <p [style.color]=[info.color]> {{info.description}} </p>\r\n                </li>\r\n              </ul>\r\n\r\n              <p *ngIf=\"learnItem.answer\">\r\n                {{learnItem.question}}\r\n                <br>\r\n                <br>\r\n                <select class=\"form-control input-lg\" [(ngModel)]=\"userAnswer\" name=\"userAnswerInput\" *ngIf=\"!answerSubmitted\" required>\r\n                  <option [value]=\"''\" disabled=\"disabled\"></option>\r\n                  <option *ngFor=\"let option of learnItem.options;\">{{option}}</option>\r\n                </select>\r\n              </p>\r\n              <br>\r\n            </li>\r\n          </ul>\r\n\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"!topic.learnItems.length\">\r\n        <div class=\"alert alert-info review-alert\" role=\"alert\">\r\n          <a href=\"#\" class=\"alert-link\"> There are currently no Learning items for {{topic.name}}.</a>\r\n        </div>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"!topic\" class=\"row\">\r\n    No topic found\r\n  </div>\r\n</div> \r\n                \r\n`\r\n})\r\nexport class TopicLearnComponent implements OnInit {\r\n\r\n  topic: ITopic;\r\n  private sub: Subscription;\r\n\r\n  router: Router;\r\n\r\n  userAnswer: string;\r\n  correctAnswer: string;\r\n  currentQuestion: number;\r\n  validAnswer: boolean;\r\n  answerSubmitted: boolean;\r\n  moduleIsComplete: boolean;\r\n  incorrectAnswers: number;\r\n\r\n  currentAction: string;\r\n\r\n  public orientation: Orientation;\r\n\r\n  constructor(private route: ActivatedRoute, router: Router, private dataService: DataService, private changeDetectorRef: ChangeDetectorRef) {\r\n      this.router = router;\r\n      this.validAnswer = true;\r\n      this.answerSubmitted = false;\r\n      this.userAnswer = \"Current Question Not Answered Yet\";\r\n      this.currentQuestion = 0;\r\n      this.moduleIsComplete = false;\r\n      this.incorrectAnswers = 0;\r\n      this.currentAction = 'Submit';\r\n      this.changeDetectorRef = changeDetectorRef;\r\n   } \r\n\r\n  ngOnInit() {\r\n      this.sub = this.route.parent.params.subscribe(params => {\r\n        let id = +params['id'];\r\n        this.dataService.getTopic(id)\r\n            .subscribe((topic: ITopic) => this.topic = topic);\r\n      });\r\n\r\n      this.orientation = \"void\";\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n  }\r\n\r\n  previousItem() {\r\n    this.orientation = \"previous\";\r\n    this.changeDetectorRef.detectChanges();\r\n\r\n    if(this.currentQuestion == 0)\r\n    {\r\n      return;\r\n    }\r\n    else{\r\n      this.currentQuestion--;\r\n    }\r\n\r\n    this.orientation = \"void\";\r\n  }\r\n\r\n  nextItem(){\r\n    this.orientation = \"next\";\r\n    this.changeDetectorRef.detectChanges();\r\n\r\n    this.answerSubmitted = false;\r\n    this.userAnswer = \"Current Question Not Answered Yet\";\r\n    this.currentQuestion++;\r\n\r\n    if(this.topic.learnItems.length == this.currentQuestion)\r\n    {\r\n      this.moduleIsComplete = true;\r\n    }\r\n\r\n    this.orientation = \"void\";\r\n  }\r\n\r\n  wrongAnswer(){\r\n    this.answerSubmitted = true;\r\n    this.validAnswer = false;\r\n    this.incorrectAnswers++;\r\n  }\r\n\r\n  rightAnswer(){\r\n    this.answerSubmitted = true;\r\n    this.validAnswer = true;\r\n  }\r\n\r\n  retryQuestion(){\r\n    this.answerSubmitted = false;\r\n    this.userAnswer = \"Current Question Not Answered Yet\";\r\n    this.validAnswer = true;\r\n  }\r\n\r\n  performAction(action: string) {\r\n    switch(action) {\r\n      case 'Next' : this.nextItem();\r\n        break;\r\n      case 'Previous' : this.previousItem();\r\n        break;\r\n      case 'Submit' : this.checkAnswer();\r\n        break;\r\n      case 'Retry' : this.retryQuestion();\r\n        break;\r\n    }\r\n  }\r\n\r\n  checkAnswer() {   \r\n    if(this.correctAnswer != this.userAnswer) {\r\n      this.wrongAnswer();\r\n      this.currentAction = 'retryQuestion';\r\n    }\r\n    else {\r\n      this.rightAnswer();\r\n      this.currentAction = 'next';\r\n    }\r\n  }\r\n\r\n}"],"sourceRoot":"/source/"}