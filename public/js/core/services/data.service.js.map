{"version":3,"sources":["core/services/data.service.ts"],"names":[],"mappings":"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","file":"core/services/data.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport {Observer} from 'rxjs/Observer';\r\nimport 'rxjs/add/operator/map'; \r\nimport 'rxjs/add/operator/catch';\r\n\r\nimport { ICourse, ITopic } from '../../shared/interfaces';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\t_baseUrl: string = '';\r\n    courses: ICourse[];\r\n    topics: ITopic[];\r\n\r\n    constructor(private http: Http) { \r\n\r\n    }\r\n\r\n    getCourses() : Observable<ICourse[]> {\r\n        if (!this.courses) {\r\n            return this.http.get(this._baseUrl + 'courses.json')\r\n                        .map((res: Response) => {\r\n                            this.courses = res.json();\r\n                            return this.courses;\r\n                        })\r\n                        .catch(this.handleError);\r\n        }\r\n        else {\r\n            //return cached data\r\n            return this.createObservable(this.courses);\r\n        }\r\n    }\r\n\t\r\n\tgetCourse(id: number) : Observable<ICourse> {\r\n        if (this.courses) {\r\n            //filter using cached data\r\n            return this.findCourseObservable(id);\r\n        } else {\r\n            //Query the existing courses to find the target course\r\n            return Observable.create((observer: Observer<ICourse>) => {\r\n                    this.getCourses().subscribe((courses: ICourse[]) => {\r\n                        this.courses = courses;                \r\n                        const cust = this.filterCourses(id);\r\n                        observer.next(cust);\r\n                        observer.complete();\r\n                })\r\n            })\r\n            .catch(this.handleError);\r\n        }\r\n    }\r\n\r\n    getTopics() : Observable<ITopic[]> {\r\n        if (!this.topics) {\r\n            return this.http.get(this._baseUrl + 'topics.json')\r\n                        .map((res: Response) => {\r\n                            this.topics = res.json();\r\n                            return this.topics;\r\n                        })\r\n                        .catch(this.handleError);\r\n        }\r\n        else {\r\n            //return cached data\r\n            return this.createObservable(this.topics);\r\n        }\r\n    }\r\n\t\r\n\tgetTopic(id: number) : Observable<ITopic> {\r\n        if (this.topics) {\r\n            //filter using cached data\r\n            return this.findTopicObservable(id);\r\n        } else {\r\n            //Query the existing topics to find the target course\r\n            return Observable.create((observer: Observer<ITopic>) => {\r\n                    this.getTopics().subscribe((topics: ITopic[]) => {\r\n                        this.topics = topics;                \r\n                        const cust = this.filterTopics(id);\r\n                        observer.next(cust);\r\n                        observer.complete();\r\n                })\r\n            })\r\n            .catch(this.handleError);\r\n        }\r\n    }\r\n\r\n    private filterCourses(id: number) : ICourse {\r\n        const cs = this.courses.filter((c) => c.id === id);\r\n        return (cs.length) ? cs[0] : null;\r\n    }\r\n\r\n    private findCourseObservable(id: number) : Observable<ICourse> {        \r\n        return this.createObservable(this.filterCourses(id));\r\n    }\r\n\r\n    private filterTopics(id: number) : ITopic {\r\n        const cs = this.topics.filter((c) => c.id === id);\r\n        return (cs.length) ? cs[0] : null;\r\n    }\r\n\r\n    private findTopicObservable(id: number) : Observable<ITopic> {        \r\n        return this.createObservable(this.filterTopics(id));\r\n    }\r\n\r\n    private createObservable(data: any) : Observable<any> {\r\n        return Observable.create((observer: Observer<any>) => {\r\n            observer.next(data);\r\n            observer.complete();\r\n        });\r\n    }\r\n\r\n    private handleError(error: any) {\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    }\r\n}"],"sourceRoot":"/source/"}